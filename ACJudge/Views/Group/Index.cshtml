@model ACJudge.ViewModels.GroupViewsModel.GroupPage
@{
    ViewData["Title"] = "Group Page";
}

<section class="group-page">
    <div class="container">
        <ul class="nav nav-tabs text-capitalize">
            @{
                var currentAction = ViewContext.RouteData.Values.ContainsKey("Action") ? 
                    ViewContext.RouteData.Values["Action"].ToString() : "NULL";

            }
            @if (currentAction == "Index")
            {
                <li role="presentation" class="active"><a asp-action="Index">All Groups</a></li>
            }
            else
            {
                <li role="presentation"><a asp-action="Index">All Groups</a></li>
            }
            @if (currentAction == "MyGroups")
            {
                <li role="presentation" class="active"><a asp-action="MyGroups">My Groups</a></li>
            }
            else
            {
                <li role="presentation"><a asp-action="MyGroups">My Groups</a></li>
            }
            @if (currentAction == "Invitations")
            {
                <li role="presentation" class="active"><a asp-action="Invitations">Invitations</a></li>
            }
            else
            {
                string Text = "Invitations";
                if (ViewBag.NumberOfGroupInvitations > 0)
                {
                    Text += "(" + @ViewBag.NumberOfGroupInvitations + ")";
                }
                <li role="presentation"><a asp-action="Invitations"> @Text </a></li>
            }


            <li role="presentation" class="creat-group">
                <a asp-action="Create"><i class="fas fa-plus"></i> New Group</a>
            </li>
        </ul>
        <div class="row groups">
            @foreach (var item in Model.GroupModels)
            {
                if (currentAction == "Invitations")
                {
                    <partial name="groupBoxInvitation" for="@item" />
                }
                else
                {
                    <partial name="groupBox" for="@item" />
                }
            }
        </div>
        
        <div aria-label="Page navigation" class="text-center">
            <ul class="pagination pagination-lg">
                @if (!Model.IsFirstPage)
                {
                    <li>
                        <a asp-action="PageCalledFromAView" asp-route-PageNumber="@(Model.CurrentPage - 1)" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }




                @foreach (var currentPageNumber in Model.PageNumbers)
                {
                    if (currentPageNumber == Model.CurrentPage)
                    {
                        <li class="active"><a>@currentPageNumber</a></li>
                    }
                    else
                    {
                        <li><a asp-action="PageCalledFromAView" asp-route-PageNumber="@currentPageNumber">@currentPageNumber</a></li>
                    }
                }


                @if (!Model.IsLastPage)
                {
                    <li>
                        <a asp-action="PageCalledFromAView" asp-route-PageNumber="@(Model.CurrentPage + 1)" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }

            </ul>
        </div>
        
    </div>

</section>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}