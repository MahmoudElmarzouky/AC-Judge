// <auto-generated />
using System;
using GraduationProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GraduationProject.Migrations.Entities
{
    [DbContext(typeof(EntitiesContext))]
    [Migration("20210629124943_modify-context")]
    partial class modifycontext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GraduationProject.Data.Models.Blog", b =>
                {
                    b.Property<int>("blogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("blogId1")
                        .HasColumnType("int");

                    b.Property<string>("blogVisabilty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("blogcontent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("blogtitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("blogvote")
                        .HasColumnType("int");

                    b.Property<DateTime>("creationTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("groupId")
                        .HasColumnType("int");

                    b.HasKey("blogId");

                    b.HasIndex("blogId1");

                    b.HasIndex("groupId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.BlogTag", b =>
                {
                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("BlogId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("BlogTag");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.CodeforcesStatistics", b =>
                {
                    b.Property<int>("CodeforcesStatisticsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SolvedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("lastCheckSubmission")
                        .HasColumnType("datetime2");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("CodeforcesStatisticsId");

                    b.HasIndex("userId")
                        .IsUnique();

                    b.ToTable("CodeforcesStatistics");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.Comment", b =>
                {
                    b.Property<int>("commentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("blogId")
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("creationTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("downvote")
                        .HasColumnType("int");

                    b.Property<int>("upvote")
                        .HasColumnType("int");

                    b.HasKey("commentId");

                    b.HasIndex("blogId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.Contest", b =>
                {
                    b.Property<int>("contestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("contestDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("contestStartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("contestTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contestVisabilty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creationTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("groupId")
                        .HasColumnType("int");

                    b.HasKey("contestId");

                    b.HasIndex("groupId");

                    b.ToTable("Contests");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.ContestProblem", b =>
                {
                    b.Property<int>("contestId")
                        .HasColumnType("int");

                    b.Property<int>("problemId")
                        .HasColumnType("int");

                    b.Property<int>("order")
                        .HasColumnType("int");

                    b.HasKey("contestId", "problemId");

                    b.HasIndex("problemId");

                    b.ToTable("ContestProblem");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroupDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("creationTime")
                        .HasColumnType("datetime2");

                    b.HasKey("GroupId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.Handle", b =>
                {
                    b.Property<int>("handleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("atCoderHandle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codeforcesHandle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("handleId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Handles");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.Problem", b =>
                {
                    b.Property<int>("ProblemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProblemSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inputType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("memorylimit")
                        .HasColumnType("int");

                    b.Property<string>("outputType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("problemSourceId")
                        .HasColumnType("int");

                    b.Property<string>("problemText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("problemTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("problemType")
                        .HasColumnType("int");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.Property<int>("timelimit")
                        .HasColumnType("int");

                    b.HasKey("ProblemId");

                    b.ToTable("Problems");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.ProblemTag", b =>
                {
                    b.Property<int>("ProblemId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("ProblemId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ProblemTag");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.Submission", b =>
                {
                    b.Property<int>("SubmissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("MemoryConsumeBytes")
                        .HasColumnType("real");

                    b.Property<int>("ProblemId")
                        .HasColumnType("int");

                    b.Property<string>("ProgrammingLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TimeConsumeMillis")
                        .HasColumnType("real");

                    b.Property<string>("Verdict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visable")
                        .HasColumnType("bit");

                    b.Property<int>("contestId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("SubmissionId");

                    b.HasIndex("ProblemId");

                    b.HasIndex("contestId");

                    b.HasIndex("userId");

                    b.ToTable("Submissions");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.Tag", b =>
                {
                    b.Property<int>("tagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tagName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfJoin")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.UserBlog", b =>
                {
                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<int>("blogId")
                        .HasColumnType("int");

                    b.Property<int>("blogOwenr")
                        .HasColumnType("int");

                    b.Property<bool>("isFavourite")
                        .HasColumnType("bit");

                    b.HasKey("userId", "blogId");

                    b.HasIndex("blogId");

                    b.ToTable("UserBlog");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.UserContest", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ContestId")
                        .HasColumnType("int");

                    b.Property<bool>("isFavourite")
                        .HasColumnType("bit");

                    b.Property<bool>("isOwner")
                        .HasColumnType("bit");

                    b.Property<bool>("isRegistered")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "ContestId");

                    b.HasIndex("ContestId");

                    b.ToTable("UserContest");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.UserGroup", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MemberSince")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isFavourite")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("UserGroup");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.atcoderStatistics", b =>
                {
                    b.Property<int>("atcoderStatisticsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SolvedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("lastCheckSubmission")
                        .HasColumnType("datetime2");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("atcoderStatisticsId");

                    b.HasIndex("userId")
                        .IsUnique();

                    b.ToTable("atcoderStatistics");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.commentVote", b =>
                {
                    b.Property<int>("commentId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<bool>("isFavourite")
                        .HasColumnType("bit");

                    b.Property<int>("value")
                        .HasColumnType("int");

                    b.HasKey("commentId", "userId");

                    b.HasIndex("userId");

                    b.ToTable("commentVote");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.userStatistics", b =>
                {
                    b.Property<int>("userStatisticsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SolvedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("lastCheckSubmission")
                        .HasColumnType("datetime2");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("userStatisticsId");

                    b.HasIndex("userId")
                        .IsUnique();

                    b.ToTable("userStatistics");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.Blog", b =>
                {
                    b.HasOne("GraduationProject.Data.Models.Blog", null)
                        .WithMany("blogs")
                        .HasForeignKey("blogId1");

                    b.HasOne("GraduationProject.Data.Models.Group", "group")
                        .WithMany("blogs")
                        .HasForeignKey("groupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("group");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.BlogTag", b =>
                {
                    b.HasOne("GraduationProject.Data.Models.Blog", "blog")
                        .WithMany("blogTag")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GraduationProject.Data.Models.Tag", "tag")
                        .WithMany("blogTag")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("blog");

                    b.Navigation("tag");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.CodeforcesStatistics", b =>
                {
                    b.HasOne("GraduationProject.Data.Models.User", "user")
                        .WithOne("codeforcesStatistic")
                        .HasForeignKey("GraduationProject.Data.Models.CodeforcesStatistics", "userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.Comment", b =>
                {
                    b.HasOne("GraduationProject.Data.Models.Blog", "blog")
                        .WithMany()
                        .HasForeignKey("blogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("blog");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.Contest", b =>
                {
                    b.HasOne("GraduationProject.Data.Models.Group", "group")
                        .WithMany("Contests")
                        .HasForeignKey("groupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("group");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.ContestProblem", b =>
                {
                    b.HasOne("GraduationProject.Data.Models.Contest", "contest")
                        .WithMany("ContestProblems")
                        .HasForeignKey("contestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GraduationProject.Data.Models.Problem", "problem")
                        .WithMany("ContestProblems")
                        .HasForeignKey("problemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("contest");

                    b.Navigation("problem");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.Handle", b =>
                {
                    b.HasOne("GraduationProject.Data.Models.User", "user")
                        .WithOne("handle")
                        .HasForeignKey("GraduationProject.Data.Models.Handle", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.ProblemTag", b =>
                {
                    b.HasOne("GraduationProject.Data.Models.Problem", "Problem")
                        .WithMany("ProblemTag")
                        .HasForeignKey("ProblemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GraduationProject.Data.Models.Tag", "Tag")
                        .WithMany("ProblemTag")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Problem");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.Submission", b =>
                {
                    b.HasOne("GraduationProject.Data.Models.Problem", "problem")
                        .WithMany("Submissions")
                        .HasForeignKey("ProblemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GraduationProject.Data.Models.Contest", "contest")
                        .WithMany("Submissions")
                        .HasForeignKey("contestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GraduationProject.Data.Models.User", "user")
                        .WithMany("submissions")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("contest");

                    b.Navigation("problem");

                    b.Navigation("user");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.UserBlog", b =>
                {
                    b.HasOne("GraduationProject.Data.Models.Blog", "blog")
                        .WithMany("userBlog")
                        .HasForeignKey("blogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GraduationProject.Data.Models.User", "User")
                        .WithMany("userBlog")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("blog");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.UserContest", b =>
                {
                    b.HasOne("GraduationProject.Data.Models.Contest", "Contest")
                        .WithMany("UserContest")
                        .HasForeignKey("ContestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GraduationProject.Data.Models.User", "User")
                        .WithMany("UserContest")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contest");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.UserGroup", b =>
                {
                    b.HasOne("GraduationProject.Data.Models.Group", "Group")
                        .WithMany("UserGroup")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GraduationProject.Data.Models.User", "User")
                        .WithMany("UserGroup")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.atcoderStatistics", b =>
                {
                    b.HasOne("GraduationProject.Data.Models.User", "user")
                        .WithOne("atcoderStatistic")
                        .HasForeignKey("GraduationProject.Data.Models.atcoderStatistics", "userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.commentVote", b =>
                {
                    b.HasOne("GraduationProject.Data.Models.Comment", "comment")
                        .WithMany("CommentVotes")
                        .HasForeignKey("commentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GraduationProject.Data.Models.User", "user")
                        .WithMany("CommentVotes")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("comment");

                    b.Navigation("user");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.userStatistics", b =>
                {
                    b.HasOne("GraduationProject.Data.Models.User", "user")
                        .WithOne("userStatistic")
                        .HasForeignKey("GraduationProject.Data.Models.userStatistics", "userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.Blog", b =>
                {
                    b.Navigation("blogs");

                    b.Navigation("blogTag");

                    b.Navigation("userBlog");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.Comment", b =>
                {
                    b.Navigation("CommentVotes");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.Contest", b =>
                {
                    b.Navigation("ContestProblems");

                    b.Navigation("Submissions");

                    b.Navigation("UserContest");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.Group", b =>
                {
                    b.Navigation("blogs");

                    b.Navigation("Contests");

                    b.Navigation("UserGroup");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.Problem", b =>
                {
                    b.Navigation("ContestProblems");

                    b.Navigation("ProblemTag");

                    b.Navigation("Submissions");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.Tag", b =>
                {
                    b.Navigation("blogTag");

                    b.Navigation("ProblemTag");
                });

            modelBuilder.Entity("GraduationProject.Data.Models.User", b =>
                {
                    b.Navigation("atcoderStatistic");

                    b.Navigation("codeforcesStatistic");

                    b.Navigation("CommentVotes");

                    b.Navigation("handle");

                    b.Navigation("submissions");

                    b.Navigation("userBlog");

                    b.Navigation("UserContest");

                    b.Navigation("UserGroup");

                    b.Navigation("userStatistic");
                });
#pragma warning restore 612, 618
        }
    }
}
